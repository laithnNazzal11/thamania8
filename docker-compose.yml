version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: thamanea-postgres
    environment:
      POSTGRES_DB: itunes_search
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    networks:
      - thamanea-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: thamanea-backend
    ports:
      - "3001:3001"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: itunes_search
      NODE_ENV: production
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - thamanea-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: thamanea-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - thamanea-network

volumes:
  postgres_data:
    driver: local

networks:
  thamanea-network:
    driver: bridge
